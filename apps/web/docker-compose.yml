version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: inventory_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-inventory_root_password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-inventory_store}
      MYSQL_USER: ${MYSQL_USER:-inventory_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-inventory_password}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - inventory_network
    command: --default-authentication-plugin=mysql_native_password

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: inventory_app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mysql://${MYSQL_USER:-inventory_user}:${MYSQL_PASSWORD:-inventory_password}@mysql:3306/${MYSQL_DATABASE:-inventory_store}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - RESEND_API_KEY=${RESEND_API_KEY}
      - RAZORPAY_KEY_ID=${RAZORPAY_KEY_ID}
      - RAZORPAY_KEY_SECRET=${RAZORPAY_KEY_SECRET}
      - RAZORPAY_ENABLED=${RAZORPAY_ENABLED:-false}
    ports:
      - "3000:3000"
    depends_on:
      - mysql
    networks:
      - inventory_network
    volumes:
      - ./public/uploads:/app/public/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: inventory_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - inventory_network

volumes:
  mysql_data:

networks:
  inventory_network:
    driver: bridge
